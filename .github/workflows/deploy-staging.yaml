name: Deploy to staging

on:
  pull_request:
    branches:
      - master

jobs:
  build-and-deploy:
    name: Build, publish and deploy to staging environment when pull request is created
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@master
        with:
          project_id: digdir-fdk-infra
          service_account_email: ${{ secrets.GCP_SA_DIGDIR_FDK_GCR_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_DIGDIR_FDK_GCR_KEY }}

      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: gcloud auth configure-docker eu.gcr.io

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

#      - name: Build Docker image with GitHub commit sha tag
#        uses: docker/build-push-action@v2
#        with:
#          push: true
#          tags: eu.gcr.io/digdir-fdk-infra/sso:staging_latest
#          cache-from: type=local,src=/tmp/.buildx-cache
#          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build Docker image with GitHub commit sha tag
        run: docker build -t eu.gcr.io/digdir-fdk-infra/sso:$GITHUB_SHA -t eu.gcr.io/digdir-fdk-infra/sso:staging_latest --cache-from=type=local,src=/.m2/repository --push .

#      - name: Publish docker image to Google Cloud
#        run: docker -- push eu.gcr.io/digdir-fdk-infra/sso

      - name: Apply Helm template
        run: |
            helm repo add fdk https://informasjonsforvaltning.github.io/helm-chart/
            helm fetch --untar --untardir ./helm fdk/sso
            helm template --set DOCKER_IMAGE_NAME="eu.gcr.io/digdir-fdk-infra/sso:$GITHUB_SHA" -f ./helm/sso/values/staging.yaml ./helm/sso/ > ./kubectlapply.yaml
            chmod o+w ./kubectlapply.yaml
            cat kubectlapply.yaml

      - name: Get kubeconfig file from GKE
        uses: machine-learning-apps/gke-kubeconfig@master
        with:
          application_credentials: ${{ secrets.DIGDIR_FDK_DEV_AUTODEPLOY }}
          project_id: digdir-fdk-dev
          location_zone: europe-north1-a
          cluster_name: digdir-fdk-dev

      - name: Deploy to staging
        uses: docker://bitnami/kubectl:latest
        env:
          KUBECONFIG: '/github/workspace/.kube/config'
        with:
          args: "apply -f ./kubectlapply.yaml --force"

#      - name: Notify slack
#        uses: 8398a7/action-slack@v3
#        with:
#          status: ${{ job.status }}
#          author_name: 'Application: sso | Environment: staging'
#          fields: commit,author,workflow
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#        if: always()
