{
  "accessCodeLifespan": 60,
  "accessCodeLifespanLogin": 1800,
  "accessCodeLifespanUserAction": 300,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "adminEventsDetailsEnabled": false,
  "adminEventsEnabled": false,
  "attributes": {
    "_browser_header.contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "_browser_header.contentSecurityPolicyReportOnly": "",
    "_browser_header.strictTransportSecurity": "max-age=31536000; includeSubDomains",
    "_browser_header.xContentTypeOptions": "nosniff",
    "_browser_header.xFrameOptions": "SAMEORIGIN",
    "_browser_header.xRobotsTag": "none",
    "_browser_header.xXSSProtection": "1; mode=block",
    "actionTokenGeneratedByAdminLifespan": "43200",
    "actionTokenGeneratedByUserLifespan": "300",
    "bruteForceProtected": "false",
    "failureFactor": "30",
    "maxDeltaTimeSeconds": "43200",
    "maxFailureWaitSeconds": "900",
    "minimumQuickLoginWaitSeconds": "60",
    "offlineSessionMaxLifespan": "5184000",
    "offlineSessionMaxLifespanEnabled": "false",
    "permanentLockout": "false",
    "quickLoginCheckMilliSeconds": "1000",
    "waitIncrementSeconds": "60"
  },
  "authenticationFlows": [
    {
      "alias": "Handle Existing Account",
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-email-verification",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "id": "66583c7f-95cb-4911-90d4-b1db4a9d3716",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Verify Existing Account by Re-authentication",
      "authenticationExecutions": [
        {
          "authenticator": "auth-otp-form",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "OPTIONAL",
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-username-password-form",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Reauthentication of existing account",
      "id": "b2516381-1aa8-476d-98c6-7f58dc83d59f",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "browser",
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorConfig": "default-idporten-config",
          "autheticatorFlow": false,
          "priority": 25,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "browser based authentication",
      "id": "78276988-9e87-4fe9-bca4-4d5e3d01912f",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "clients",
      "authenticationExecutions": [
        {
          "authenticator": "client-jwt",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "autheticatorFlow": false,
          "priority": 40,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Base authentication for clients",
      "id": "f3c5e727-cdfb-42df-a173-6baa38b89e64",
      "providerId": "client-flow",
      "topLevel": true
    },
    {
      "alias": "direct grant",
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-otp",
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "OPTIONAL",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-username",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "OpenID Connect Resource Owner Grant",
      "id": "cbe1526c-73ac-49dc-9f51-4256991832c0",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "docker auth",
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Used by Docker clients to authenticate against the IDP",
      "id": "275171f1-e5d2-474e-935f-32ea99e5788f",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "first broker login",
      "authenticationExecutions": [
        {
          "authenticator": "idp-create-user-if-unique",
          "authenticatorConfig": "create unique user config",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-review-profile",
          "authenticatorConfig": "review profile config",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "id": "88402bf3-a15f-4622-838a-d7f5aacd43a9",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "forms",
      "authenticationExecutions": [
        {
          "authenticator": "auth-otp-form",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "OPTIONAL",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-username-password-form",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Username, password, otp and other auth forms.",
      "id": "77ecc1b2-5687-4dae-906b-38f7d377bcbf",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "http challenge",
      "authenticationExecutions": [
        {
          "authenticator": "auth-spnego",
          "autheticatorFlow": false,
          "priority": 40,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "no-cookie-redirect",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "id": "f9887b72-e67c-4f1c-8ec1-ca85b8de1608",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "link accounts",
      "authenticationExecutions": [
        {
          "authenticator": "idp-auto-link",
          "autheticatorFlow": false,
          "priority": 1,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-create-user-if-unique",
          "autheticatorFlow": false,
          "priority": 0,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": false,
      "description": "",
      "id": "75fa480c-84d5-4680-b32c-9c38a171e95f",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "registration form",
      "authenticationExecutions": [
        {
          "authenticator": "registration-password-action",
          "autheticatorFlow": false,
          "priority": 50,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "autheticatorFlow": false,
          "priority": 40,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "autheticatorFlow": false,
          "priority": 60,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-user-creation",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "registration form",
      "id": "36914600-781e-445c-87f9-6bc156f8b83e",
      "providerId": "form-flow",
      "topLevel": false
    },
    {
      "alias": "registration",
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "registration flow",
      "id": "5e8926d0-c0d2-4b2b-84fc-6e251c846e2f",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "reset credentials",
      "authenticationExecutions": [
        {
          "authenticator": "reset-credential-email",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credentials-choose-user",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "autheticatorFlow": false,
          "priority": 40,
          "requirement": "OPTIONAL",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Reset credentials for a user if they forgot their password or something",
      "id": "bebe6c15-efd4-433f-a4af-ac6e0a7f19be",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "saml ecp",
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "SAML ECP Profile Authentication Flow",
      "id": "fa2a293a-9b4e-4229-a799-a5fbf3176ead",
      "providerId": "basic-flow",
      "topLevel": true
    }
  ],
  "authenticatorConfig": [
    {
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      },
      "id": "d17691cd-0652-4a43-aa74-a1b83a882067"
    },
    {
      "alias": "default-idporten-config",
      "config": {},
      "id": "e64d7cd7-aa69-4b47-8c6c-aaa4ff3ffbf7"
    },
    {
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      },
      "id": "048bd0f8-b2ea-4b77-b8ed-18c396ea546c"
    }
  ],
  "browserFlow": "browser",
  "browserSecurityHeaders": {
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "contentSecurityPolicyReportOnly": "",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains",
    "xContentTypeOptions": "nosniff",
    "xFrameOptions": "SAMEORIGIN",
    "xRobotsTag": "none",
    "xXSSProtection": "1; mode=block"
  },
  "bruteForceProtected": false,
  "clientAuthenticationFlow": "clients",
  "clients": [
    {
      "adminUrl": "",
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "concept-catalogue-gui",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins",
        "authorities"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "6a8be8e9-632b-429e-827f-803133375586",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "user_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "b2a2bd8a-33e1-467a-b8a8-f4c6e3c1b8c9",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "false",
            "included.client.audience": "concept-catalogue",
            "userinfo.token.claim": "false"
          },
          "consentRequired": false,
          "id": "03674479-c60b-4113-9db0-c128616f0524",
          "name": "include concept-catalogue audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "false",
            "included.client.audience": "catalog-comments-service",
            "userinfo.token.claim": "false"
          },
          "consentRequired": false,
          "id": "424ca9c3-12a2-4bc8-b546-fd656e106932",
          "name": "include catalog-comments-service audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "${DEV_CONCEPT_CATALOGUE_HOST}/*",
        "/*"
      ],
      "rootUrl": "${CONCEPT_CATALOGUE_HOST}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "${CONCEPT_CATALOGUE_HOST}",
        "${DEV_CONCEPT_CATALOGUE_HOST}"
      ]
    },
    {
      "adminUrl": "",
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "fdk-admin-gui",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins",
        "authorities"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "5dea979d-861e-4d1d-a9bc-383e02ff18bc",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "user_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "e92da100-cc48-4f30-a7a4-7a144b2c0702",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "false",
            "included.client.audience": "a-backend-service",
            "userinfo.token.claim": "false"
          },
          "consentRequired": false,
          "id": "96f61096-b868-43dd-adaf-54084c510191",
          "name": "include a-backend-service audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "false",
            "included.client.audience": "fdk-harvest-admin",
            "userinfo.token.claim": "false"
          },
          "consentRequired": false,
          "id": "6e611e98-67f5-4b95-af67-2acc39443b78",
          "name": "include fdk-harvest-admin audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "false",
            "included.client.audience": "organization-catalogue",
            "userinfo.token.claim": "false"
          },
          "consentRequired": false,
          "id": "985e525d-e74d-4386-8261-561e7c539564",
          "name": "include organization-catalogue audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "${DEV_FDK_ADMIN_GUI_HOST}/*",
        "/*"
      ],
      "rootUrl": "${FDK_ADMIN_GUI_HOST}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "${DEV_FDK_ADMIN_GUI_HOST}",
        "${FDK_ADMIN_GUI_HOST}"
      ]
    },
    {
      "id": "c2288671-8292-4774-9a2b-53b37483343e",
      "clientId": "fdk-community-service",
      "rootUrl": "${FDK_COMMUNITY_SERVICE_HOST}",
      "adminUrl": "",
      "baseUrl": "/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "${DEV_FDK_COMMUNITY_SERVICE_HOST}/*",
        "/*"
      ],
      "webOrigins": [
        "${DEV_FDK_COMMUNITY_SERVICE_HOST}",
        "${FDK_COMMUNITY_SERVICE_HOST}"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "login_theme": "fdk-fbh",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "authorities",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access"
      ]
    },
    {
      "adminUrl": "",
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "fdk-registration-public",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins",
        "authorities"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "f02f8983-8a9b-4b14-8834-12859bd50305",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "user_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "b7ef5108-7430-4ff0-9d33-8ded7936bf85",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "false",
            "included.client.audience": "concept-catalogue",
            "userinfo.token.claim": "false"
          },
          "consentRequired": false,
          "id": "f12158db-f283-433d-b70b-8a048240ff8b",
          "name": "include concept-catalogue audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "false",
            "included.client.audience": "dataservice-catalog",
            "userinfo.token.claim": "false"
          },
          "consentRequired": false,
          "id": "e23269ba-e394-544c-a81a-9b159351ee9a",
          "name": "include dataservice-catalog audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "false",
            "included.client.audience": "fdk-registration-api",
            "userinfo.token.claim": "false"
          },
          "consentRequired": false,
          "id": "132656e1-95a8-4b8b-93e7-908274a29f2f",
          "name": "include registration-api audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "false",
            "included.client.audience": "records-of-processing-activities"
          },
          "consentRequired": false,
          "id": "09ea0a45-912e-44f9-8df4-c10cc1fdd4ea",
          "name": "include records-of-processing-activities audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "false",
            "included.client.audience": "catalog-comments-service"
          },
          "consentRequired": false,
          "id": "4bc2e404-4fc4-49e8-894a-2fe48fa7e172",
          "name": "include catalog-comments-service audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "${DEV_REGISTRATION_HOST}/*",
        "/*"
      ],
      "rootUrl": "${REGISTRATION_HOST}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "${DEV_REGISTRATION_HOST}",
        "${REGISTRATION_HOST}"
      ]
    },
    {
      "adminUrl": "",
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "records-of-processing-activities-gui",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins",
        "authorities"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "31d93d4f-7718-4b57-83fa-97edd1a036eb",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "user_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "f5f9dc77-626a-44b4-abc2-d5b913a5e093",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "false",
            "included.client.audience": "fdk-registration-api"
          },
          "consentRequired": false,
          "id": "5b5d1f51-2e9f-4e3d-84fe-d6bea2c9538f",
          "name": "include registration-api audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "false",
            "included.client.audience": "records-of-processing-activities"
          },
          "consentRequired": false,
          "id": "5faa2375-53da-4a13-a6c2-eb610a7b0c06",
          "name": "include records-of-processing-activities audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "false",
            "included.client.audience": "catalog-comments-service"
          },
          "consentRequired": false,
          "id": "b376224a-d71d-405d-8ad8-8f1353e1b348",
          "name": "include catalog-comments-service audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "${DEV_RECORDS_OF_PROCESSING_ACTIVITIES_GUI_HOST}/*",
        "/*"
      ],
      "rootUrl": "${RECORDS_OF_PROCESSING_ACTIVITIES_GUI_HOST}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "${DEV_RECORDS_OF_PROCESSING_ACTIVITIES_GUI_HOST}",
        "${RECORDS_OF_PROCESSING_ACTIVITIES_GUI_HOST}"
      ]
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "a-backend-service",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "a610548f-9d9e-48b0-8a68-bd5fd9184197",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "concept-catalogue",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "5454733a-d333-45c7-9c36-80b265c32248",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "dataservice-catalog",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "4e5a6153-793e-4638-bf87-3af19eacb0cf",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "adminUrl": "",
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "dataservice-catalog-gui",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins",
        "authorities"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "5ad22502-f102-4f4e-8e02-28dbe7780359",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "id": "9711fb71-a53d-49ad-b312-3a2361266ce7",
          "name": "include dataservice-catalog audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "dataservice-catalog",
            "id.token.claim": "false",
            "access.token.claim": "true"
          }
        },
        {
          "id": "9cfebc8b-aa3a-4178-ae4c-c74680ab28b1",
          "name": "include catalog-comments-service audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "catalog-comments-service",
            "id.token.claim": "false",
            "access.token.claim": "true"
          }
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "${DEV_DATASERVICE_CATALOG_GUI_HOST}/*",
        "/*"
      ],
      "rootUrl": "${DATASERVICE_CATALOG_GUI_HOST}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "${DEV_DATASERVICE_CATALOG_GUI_HOST}",
        "${DATASERVICE_CATALOG_GUI_HOST}"
      ]
    },
    {
      "adminUrl": "",
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "terms-and-conditions-gui",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins",
        "authorities"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "16e2917c-f9d7-4703-b63d-4eb36bc06c15",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "id": "9a1cb7f0-66b7-463b-b473-8648cd582423",
          "name": "include terms-and-conditions audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "terms-and-conditions",
            "id.token.claim": "false",
            "access.token.claim": "true"
          }
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "${DEV_TERMS_AND_CONDITIONS_GUI_HOST}/*",
        "/*"
      ],
      "rootUrl": "${TERMS_AND_CONDITIONS_GUI_HOST}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "${DEV_TERMS_AND_CONDITIONS_GUI_HOST}",
        "${TERMS_AND_CONDITIONS_GUI_HOST}"
      ]
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "terms-and-conditions",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "e78d34c0-6079-45fe-8bfc-b2a2b88f5b34",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "fdk-harvest-admin",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "9315e06c-0f04-4710-8f30-7fabc61a0f48",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "fdk-registration-api",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "706fd0ff-a104-41df-bbc9-5e165b6cd43b",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "organization-catalogue",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "5ea0f363-477a-4ce0-a2c5-a3f5ae9458dc",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "records-of-processing-activities",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "21726c6e-8460-4711-985b-b22acb023151",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/auth/admin/fdk/console/index.html",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "security-admin-console",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": false,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "596dddc3-226d-49f4-aac2-a675d3acbb00",
      "implicitFlowEnabled": false,
      "name": "${client_security-admin-console}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "locale",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "b9fa4954-38e5-4686-82b1-d6c7fdad0298",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "/auth/admin/fdk/console/*"
      ],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/auth/realms/fdk/account",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "account",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins"
      ],
      "defaultRoles": [
        "manage-account",
        "view-profile"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": false,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "361e3a68-b8a2-4c3b-a9e7-e9d8b19e3e7b",
      "implicitFlowEnabled": false,
      "name": "${client_account}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [
        "/auth/realms/fdk/account/*"
      ],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "admin-cli",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": false,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "88d714f9-3bef-4fed-8233-5e6c1fdc4382",
      "implicitFlowEnabled": false,
      "name": "${client_admin-cli}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": true,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": false,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "broker",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "ab273b27-ed09-403a-b819-4a95a8034ffa",
      "implicitFlowEnabled": false,
      "name": "${client_broker}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "realm-management",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": false,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "0ce8c679-07de-4215-bd25-4e07ac3e4e4f",
      "implicitFlowEnabled": false,
      "name": "${client_realm-management}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "catalog-comments-service",
      "consentRequired": false,
      "defaultClientScopes": [
        "email",
        "profile",
        "role_list",
        "roles",
        "web-origins"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "b7f72a5c-f5c8-4b56-af60-6f2418b2a80c",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "offline_access",
        "phone"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    }
  ],
  "clientScopes": [
    {
      "attributes": {
        "consent.screen.text": "",
        "display.on.consent.screen": "false",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "id": "0536da91-14c0-41e7-8456-a04078a59511",
      "name": "web-origins",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {},
          "consentRequired": false,
          "id": "4faf7839-3c9b-46d3-a968-945f4f818976",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: address",
      "id": "a503709c-9bd4-4541-a251-dfd9d780cfca",
      "name": "address",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "user.attribute.country": "country",
            "user.attribute.formatted": "formatted",
            "user.attribute.locality": "locality",
            "user.attribute.postal_code": "postal_code",
            "user.attribute.region": "region",
            "user.attribute.street": "street",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "d96bc123-7648-4235-9391-c2812e628ed7",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: email",
      "id": "ba20e6e4-1e14-40b0-80f7-1e5ea176affa",
      "name": "email",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "email",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "email",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "09f2f55d-54eb-4de4-ad93-230f25ac2aca",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "id.token.claim": "true",
            "jsonType.label": "boolean",
            "user.attribute": "emailVerified",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "1ff9a4ea-a9ad-44d8-ae80-414cc6d08a7d",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "description": "OpenID Connect built-in scope: offline_access",
      "id": "8863e661-7da6-429b-9fe1-c39d1cd40d8c",
      "name": "offline_access",
      "protocol": "openid-connect"
    },
    {
      "attributes": {
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: phone",
      "id": "2e48d0b0-358c-479c-8ff6-b3e8a953e90a",
      "name": "phone",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "phoneNumber",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "f594ebc8-39da-4485-aafd-0bd2320346ba",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "id.token.claim": "true",
            "jsonType.label": "boolean",
            "user.attribute": "phoneNumberVerified",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "58a7ee77-1db8-42d5-9e49-034555e7a1b6",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: profile",
      "id": "1bbf184b-a621-4eff-904e-d34c93e83c61",
      "name": "profile",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "birthdate",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "07340010-7f65-45bb-8d29-f0661a2ac6e3",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "family_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "lastName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "da03f19c-3dc0-4b6c-a9ca-32542ef46497",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "gender",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "gender",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "c8059129-d924-46f5-b325-f1942f7db986",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "given_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "firstName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "ff7d82da-1312-4a5c-9fcb-f22bcaeff09c",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "locale",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "6730870a-8e10-4e4f-b4e9-48e6f579cf98",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "middleName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "c5c8e300-5ccb-4a3e-8878-af4937115718",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "nickname",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "nickname",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "c3cd3b08-8938-4aa9-8f90-300fd8528bee",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "picture",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "picture",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "14422847-a575-4661-80fd-f818105cf31c",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "profile",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "profile",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "5ca35721-456d-4a6b-97fe-958838398415",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "updatedAt",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "329eefe9-b850-4112-a17f-ce2a95da27d1",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "website",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "website",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "679cfb0c-020d-44e9-b129-e4ed29d76cc8",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "zoneinfo",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "c8343790-7192-4ce7-af8f-42d15b50078b",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "3b47f451-d7fb-4f8d-9778-bbaf51c5707e",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add user roles to the access token",
      "id": "071bfb5b-b343-4b3d-ba9f-70ffd41abaac",
      "name": "roles",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "ff8212d7-dbe6-4ea2-bff8-431faf9251f3",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "a2eac6ed-f03b-4327-8da2-e9b8460a4ba9",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper"
        },
        {
          "config": {},
          "consentRequired": false,
          "id": "6be54e5e-1321-414b-a5b0-5944bc64e3c9",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "description": "SAML role list",
      "id": "f95dcbde-6392-482a-b14f-2cbe68768c16",
      "name": "role_list",
      "protocol": "saml",
      "protocolMappers": [
        {
          "config": {
            "attribute.name": "Role",
            "attribute.nameformat": "Basic",
            "single": "false"
          },
          "consentRequired": false,
          "id": "f6483f57-eb29-47d0-a553-a79a39d14c89",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper"
        }
      ]
    },
    {
      "id": "6edce0cf-b518-4765-86d1-adc521a2b85f",
      "name": "authorities",
      "description": "Create fdk-roles from difi attributes",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "2530d7ad-a53b-45f7-a0ef-1c688cd6e868",
          "name": "add fdk terms version",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-script-based-protocol-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "fdk_terms",
            "jsonType.label": "String",
            "script": "var SimpleHttp = Java.type(\"org.keycloak.broker.provider.util.SimpleHttp\");\n\nvar url = \"http://terms-and-conditions:8080/terms/latest/version\"\n\nexports = SimpleHttp.doGet(url, keycloakSession).asString();"
          }
        },
        {
          "id": "7d82daae-4278-4dab-b5ef-ce558bb485b3",
          "name": "map authorities",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-script-based-protocol-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "authorities",
            "jsonType.label": "String",
            "script": "var StringBuilder = Java.type(\"java.lang.StringBuilder\");\nvar SimpleHttp = Java.type(\"org.keycloak.broker.provider.util.SimpleHttp\");\n\nvar forEach = Array.prototype.forEach;\n\nvar urlBuilder = new StringBuilder();\n\nurlBuilder.append(\"http://user-api:8080/authorities/\");\n\nvar isDifiLogin = false;\nvar isOkLogin = false;\nforEach.call(user.getAttribute(\"login_type\"), function(type){\n    if (type === \"difi\") {\n        isDifiLogin = true;\n    }\n    if (type === \"ok\") {\n        isOkLogin = true;\n    }\n});\n\nif (isDifiLogin) {\n    var orgs = user.getAttribute(\"orgnr\");\n    var roles = user.getAttribute(\"difi_roles\");\n\n    var firstInList = true;\n    urlBuilder.append(\"difi?roles=\");\n\n    forEach.call(roles, function(role) {\n        if (firstInList !== true) {\n            urlBuilder.append(\",\");\n        } else {\n            firstInList = false;\n        }\n\n        urlBuilder.append(role.replace(\"brukar \", \"\"));\n    });\n\n    firstInList = true;\n    urlBuilder.append(\"&orgs=\");\n\n    forEach.call(orgs, function(org) {\n        if (firstInList !== true) {\n            urlBuilder.append(\",\");\n        } else {\n            firstInList = false;\n        }\n\n        urlBuilder.append(org);\n    });\n\n} else if (isOkLogin) {\n    var roles = user.getAttribute(\"ok_roles\");\n    var orgnames = user.getAttribute(\"ok_orgnames\");\n\n    var firstInList = true;\n    urlBuilder.append(\"oslokommune?roles=\");\n    forEach.call(roles, function(role) {\n        if (firstInList !== true) {\n            urlBuilder.append(\",\");\n        } else {\n            firstInList = false;\n        }\n\n        urlBuilder.append(role);\n    });\n\n    var firstInList = true;\n    urlBuilder.append(\"&orgnames=\");\n    forEach.call(orgnames, function(orgname) {\n        if (firstInList !== true) {\n            urlBuilder.append(\",\");\n        } else {\n            firstInList = false;\n        }\n\n        urlBuilder.append(orgname);\n    });\n\n\n} else {\n    urlBuilder.append(\"altinn/\");\n    urlBuilder.append(user.username);\n}\n\nvar url = urlBuilder.toString();\nvar response = SimpleHttp.doGet(url, keycloakSession).header(\"X-API-KEY\", \"${SSO_API_KEY}\").asResponse();\nif (response.getStatus() === 200) {\n    exports = response.asString();\n} else {\n    throw new Error('User-api authorities status: ' + response.getStatus());\n}\n"
          }
        },
        {
          "id": "899869e5-70ef-4661-86a5-32f45adee583",
          "name": "add org accepted terms versions",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-script-based-protocol-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "org_terms",
            "jsonType.label": "String",
            "script": "var StringBuilder = Java.type(\"java.lang.StringBuilder\");\nvar SimpleHttp = Java.type(\"org.keycloak.broker.provider.util.SimpleHttp\");\n\nvar forEach = Array.prototype.forEach;\n\nvar urlBuilder = new StringBuilder();\n\nurlBuilder.append(\"http://user-api:8080/terms/\");\n\nvar isDifiLogin = false;\nvar isOkLogin = false;\nforEach.call(user.getAttribute(\"login_type\"), function(type){\n    if (type === \"difi\") {\n        isDifiLogin = true;\n    }\n    if (type === \"ok\") {\n        isOkLogin = true;\n    }\n});\n\nif (isDifiLogin) {\n    var orgs = user.getAttribute(\"orgnr\");\n    var firstInList = true;\n    urlBuilder.append(\"difi?orgs=\");\n\n    forEach.call(orgs, function(org) {\n        if (firstInList !== true) {\n            urlBuilder.append(\",\");\n        } else {\n            firstInList = false;\n        }\n\n        urlBuilder.append(org);\n    });\n\n} else if (isOkLogin) {\n    var orgnames = user.getAttribute(\"ok_orgnames\");\n    var firstInList = true;\n    urlBuilder.append(\"oslokommune?orgnames=\");\n\n    forEach.call(orgnames, function(org) {\n        if (firstInList !== true) {\n            urlBuilder.append(\",\");\n        } else {\n            firstInList = false;\n        }\n\n        urlBuilder.append(org);\n    });\n\n} else {\n    urlBuilder.append(\"altinn/\");\n    urlBuilder.append(user.username);\n}\n\nvar url = urlBuilder.toString()\n\nexports = SimpleHttp.doGet(url, keycloakSession).header(\"X-API-KEY\", \"${SSO_API_KEY}\").asString();"
          }
        }
      ]
    }
  ],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        },
        "id": "c247e49e-89ff-407e-9a59-d42635ed9b70",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subComponents": {},
        "subType": "authenticated"
      },
      {
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        },
        "id": "d84007ba-449b-42bc-b285-55a52a260782",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper"
          ]
        },
        "id": "720c40d8-0635-4aa1-88eb-f1c1a1eccb88",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subComponents": {},
        "subType": "authenticated"
      },
      {
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper"
          ]
        },
        "id": "730048be-1e32-4be5-97c0-5e7a87c6c24b",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "client-uris-must-match": [
            "true"
          ],
          "host-sending-registration-request-must-match": [
            "true"
          ]
        },
        "id": "903accb3-14b3-4ec6-8f1c-105b9d59fb32",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "max-clients": [
            "200"
          ]
        },
        "id": "34ab8380-6d99-49c5-add6-dcf7e3379704",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {},
        "id": "8a1a4209-671f-46de-8231-d6b84acad911",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {},
        "id": "adc1a4cf-debe-4693-8c3f-eadf085724c5",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subComponents": {},
        "subType": "anonymous"
      }
    ]
  },
  "defaultDefaultClientScopes": [
    "email",
    "profile",
    "role_list",
    "roles",
    "web-origins"
  ],
  "defaultOptionalClientScopes": [
    "address",
    "offline_access",
    "phone"
  ],
  "defaultRoles": [
    "offline_access",
    "uma_authorization"
  ],
  "directGrantFlow": "direct grant",
  "dockerAuthenticationFlow": "docker auth",
  "duplicateEmailsAllowed": false,
  "editUsernameAllowed": false,
  "enabled": true,
  "enabledEventTypes": [],
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "failureFactor": 30,
  "groups": [],
  "id": "fdk",
  "identityProviderMappers": [
    {
      "config": {
        "claim": "pid",
        "user_lookup_url_prefix": "http://user-api:8080/users/"
      },
      "id": "cbc31a49-5ba2-46ad-8d1e-4e703ebabd77",
      "identityProviderAlias": "idporten-oidc",
      "identityProviderMapper": "rest-user-attribute-idp-mapper",
      "name": "restuser"
    },
    {
      "config": {
        "template": "${CLAIM.pid}"
      },
      "id": "0f7ed75b-b2ef-4b62-95ba-4830312dfde6",
      "identityProviderAlias": "idporten-oidc",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "name": "username template"
    },
    {
      "id": "671fd6ff-6da8-4e14-ac8d-16e5438b1dfe",
      "name": "orgnr",
      "identityProviderAlias": "${DIFI_CLIENT_ID}",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "organization.number",
        "user.attribute": "orgnr"
      }
    },
    {
      "id": "c4200179-03fc-4de4-9957-f40d526490d7",
      "name": "difi_roles",
      "identityProviderAlias": "${DIFI_CLIENT_ID}",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "realm_access.roles",
        "user.attribute": "difi_roles"
      }
    },
    {
      "id": "efe85f71-6ab0-40ca-b6f7-9dc6c3a95730",
      "name": "login_type",
      "identityProviderAlias": "${DIFI_CLIENT_ID}",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "attribute.value": "difi",
        "attribute": "login_type"
      }
    },
    {
      "id": "08065754-b9b8-45c1-aa8f-864b6a495ee5",
      "name": "ok_roles",
      "identityProviderAlias": "ok-oidc",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "groups",
        "user.attribute": "ok_roles"
      }
    },
    {
      "id": "baa75784-8f47-4d7d-91d0-960f46af7ba7",
      "name": "login_type",
      "identityProviderAlias": "ok-oidc",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "attribute.value": "ok",
        "attribute": "login_type"
      }
    },
    {
      "id": "c6f1c1b2-fc27-450b-bfb0-3ebffe529bb8",
      "name": "ok_orgnames",
      "identityProviderAlias": "ok-oidc",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "companyName",
        "user.attribute": "ok_orgnames"
      }
    }
  ],
  "identityProviders": [
    {
      "addReadTokenRoleOnCreate": false,
      "alias": "idporten-oidc",
      "authenticateByDefault": false,
      "config": {
        "authorizationUrl": "${IDPORTEN_OIDC_AUTHORIZATION_URL}",
        "backchannelSupported": "",
        "clientId": "${IDPORTEN_CLIENT_ID}",
        "clientSecret": "${IDPORTEN_CLIENT_SECRET}",
        "disableUserInfo": "",
        "guiOrder": "2",
        "hideOnLoginPage": "",
        "issuer": "${IDPORTEN_OIDC_ISSUER}",
        "jwksUrl": "${IDPORTEN_OIDC_JWKS_URL}",
        "loginHint": "",
        "logoutUrl": "${IDPORTEN_OIDC_LOGOUT_URL}",
        "tokenUrl": "${IDPORTEN_OIDC_TOKEN_URL}",
        "uiLocales": "",
        "useJwksUrl": "true",
        "validateSignature": "true"
      },
      "displayName": "ID-porten",
      "enabled": true,
      "firstBrokerLoginFlowAlias": "link accounts",
      "internalId": "71ff374a-18c7-48e9-9930-0c19592f1bfa",
      "linkOnly": false,
      "providerId": "oidc",
      "storeToken": false,
      "trustEmail": false,
      "updateProfileFirstLoginMode": "on"
    },
    {
      "addReadTokenRoleOnCreate": false,
      "alias": "local-oidc",
      "authenticateByDefault": false,
      "config": {
        "authorizationUrl": "${SSO_HOST}/auth/realms/fdk-local/protocol/openid-connect/auth",
        "backchannelSupported": "",
        "clientId": "fellesdatakatalog",
        "clientSecret": "${FDK_LOCAL_SECRET}",
        "disableUserInfo": "",
        "guiOrder": "1",
        "hideOnLoginPage": "",
        "issuer": "${SSO_HOST}/auth/realms/fdk-local",
        "jwksUrl": "${SSO_HOST}/auth/realms/fdk-local/protocol/openid-connect/certs",
        "loginHint": "",
        "logoutUrl": "${SSO_HOST}/auth/realms/fdk-local/protocol/openid-connect/logout",
        "tokenUrl": "${SSO_HOST}/auth/realms/fdk-local/protocol/openid-connect/token",
        "uiLocales": "",
        "useJwksUrl": "true",
        "validateSignature": "true"
      },
      "displayName": "Fellesdatakatalog",
      "enabled": true,
      "firstBrokerLoginFlowAlias": "link accounts",
      "internalId": "0fdf67be-4dc2-4d9e-824c-a688fe476d4e",
      "linkOnly": false,
      "providerId": "keycloak-oidc",
      "storeToken": false,
      "trustEmail": false,
      "updateProfileFirstLoginMode": "on"
    },
    {
      "alias": "${DIFI_CLIENT_ID}",
      "internalId": "5c3fdeee-512a-438c-81c1-586cb6dbb81f",
      "providerId": "keycloak-oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "hideOnLoginPage": "",
        "validateSignature": "true",
        "userInfoUrl": "${DIFI_USER_INFO_URL}",
        "uiLocales": "",
        "tokenUrl": "${DIFI_OIDC_TOKEN_URL}",
        "clientId": "${DIFI_CLIENT_ID}",
        "jwksUrl": "${DIFI_OIDC_JWKS_URL}",
        "backchannelSupported": "",
        "issuer": "${DIFI_OIDC_ISSUER}",
        "useJwksUrl": "true",
        "loginHint": "",
        "authorizationUrl": "${DIFI_OIDC_AUTHORIZATION_URL}",
        "disableUserInfo": "",
        "logoutUrl": "${DIFI_OIDC_LOGOUT_URL}",
        "clientSecret": "${DIFI_CLIENT_SECRET}",
        "guiOrder": "3"
      }
    },
    {
      "alias": "ok-oidc",
      "displayName": "Oslo Kommune",
      "internalId": "ff0ef888-1612-4fdb-be86-e05fa170ba94",
      "providerId": "keycloak-oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "hideOnLoginPage": "",
        "validateSignature": "",
        "clientId": "${OK_CLIENT_ID}",
        "tokenUrl": "${OK_OIDC_TOKEN_URL}",
        "uiLocales": "",
        "backchannelSupported": "",
        "issuer": "",
        "useJwksUrl": "true",
        "loginHint": "",
        "authorizationUrl": "${OK_OIDC_AUTHORIZATION_URL}",
        "disableUserInfo": "",
        "clientSecret": "${OK_CLIENT_SECRET}",
        "guiOrder": "4"
      }
    }
  ],
  "internationalizationEnabled": false,
  "keycloakVersion": "6.0.1",
  "loginTheme": "fdk-choose-provider",
  "loginWithEmailAllowed": true,
  "maxDeltaTimeSeconds": 43200,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "notBefore": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespan": 5184000,
  "offlineSessionMaxLifespanEnabled": false,
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyDigits": 6,
  "otpPolicyInitialCounter": 0,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyType": "totp",
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "permanentLockout": false,
  "quickLoginCheckMilliSeconds": 1000,
  "realm": "fdk",
  "refreshTokenMaxReuse": 0,
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "registrationFlow": "registration",
  "rememberMe": false,
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Configure OTP",
      "priority": 10,
      "providerId": "CONFIGURE_TOTP"
    },
    {
      "alias": "UPDATE_PASSWORD",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update Password",
      "priority": 30,
      "providerId": "UPDATE_PASSWORD"
    },
    {
      "alias": "UPDATE_PROFILE",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update Profile",
      "priority": 40,
      "providerId": "UPDATE_PROFILE"
    },
    {
      "alias": "VERIFY_EMAIL",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Verify Email",
      "priority": 50,
      "providerId": "VERIFY_EMAIL"
    },
    {
      "alias": "terms_and_conditions",
      "config": {},
      "defaultAction": false,
      "enabled": false,
      "name": "Terms and Conditions",
      "priority": 20,
      "providerId": "terms_and_conditions"
    }
  ],
  "requiredCredentials": [
    "password"
  ],
  "resetCredentialsFlow": "reset credentials",
  "resetPasswordAllowed": false,
  "revokeRefreshToken": false,
  "roles": {
    "client": {
      "a-backend-service": [],
      "account": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "361e3a68-b8a2-4c3b-a9e7-e9d8b19e3e7b",
          "description": "${role_manage-account-links}",
          "id": "eb97d2f3-67d1-40a1-8be5-ac3b5a9c4f82",
          "name": "manage-account-links"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "361e3a68-b8a2-4c3b-a9e7-e9d8b19e3e7b",
          "description": "${role_view-profile}",
          "id": "7fa4dae4-ff3a-4509-8171-39bfd2e62b7b",
          "name": "view-profile"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "containerId": "361e3a68-b8a2-4c3b-a9e7-e9d8b19e3e7b",
          "description": "${role_manage-account}",
          "id": "e0468b52-a8c7-4c45-92c6-647aaf8228ca",
          "name": "manage-account"
        }
      ],
      "admin-cli": [],
      "broker": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "ab273b27-ed09-403a-b819-4a95a8034ffa",
          "description": "${role_read-token}",
          "id": "12cedf94-78a6-47f3-bba0-4006b450382e",
          "name": "read-token"
        }
      ],
      "concept-catalogue": [],
      "concept-catalogue-gui": [],
      "dataservice-catalog": [],
      "dataservice-catalog-gui": [],
      "terms-and-conditions-gui": [],
      "fdk-admin-gui": [],
      "fdk-harvest-admin": [],
      "fdk-registration-api": [],
      "fdk-registration-public": [],
      "organization-catalogue": [],
      "terms-and-conditions": [],
      "realm-management": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0ce8c679-07de-4215-bd25-4e07ac3e4e4f",
          "description": "${role_create-client}",
          "id": "a89dee37-59f2-4b2a-9c0a-f16effe8562f",
          "name": "create-client"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0ce8c679-07de-4215-bd25-4e07ac3e4e4f",
          "description": "${role_impersonation}",
          "id": "b87a8aa4-e006-48b1-88f4-33ac670597cc",
          "name": "impersonation"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0ce8c679-07de-4215-bd25-4e07ac3e4e4f",
          "description": "${role_manage-authorization}",
          "id": "777d216b-8966-4117-b79a-317ccb96bdcf",
          "name": "manage-authorization"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0ce8c679-07de-4215-bd25-4e07ac3e4e4f",
          "description": "${role_manage-clients}",
          "id": "9ad6d0f2-fb81-4172-a4d2-7b0ac2342ae3",
          "name": "manage-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0ce8c679-07de-4215-bd25-4e07ac3e4e4f",
          "description": "${role_manage-events}",
          "id": "d0f5acee-29cc-4a39-8817-4887670386df",
          "name": "manage-events"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0ce8c679-07de-4215-bd25-4e07ac3e4e4f",
          "description": "${role_manage-identity-providers}",
          "id": "c2df43bc-45ee-469b-bb51-66f5ba7c5e14",
          "name": "manage-identity-providers"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0ce8c679-07de-4215-bd25-4e07ac3e4e4f",
          "description": "${role_manage-realm}",
          "id": "d95ba87c-b188-4c66-a605-01c14ccb490d",
          "name": "manage-realm"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0ce8c679-07de-4215-bd25-4e07ac3e4e4f",
          "description": "${role_manage-users}",
          "id": "6f44e2c6-5c63-480c-9d7f-f56a0b0cbf78",
          "name": "manage-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0ce8c679-07de-4215-bd25-4e07ac3e4e4f",
          "description": "${role_query-clients}",
          "id": "53d088a0-119a-4f6f-921a-4566dd804b47",
          "name": "query-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0ce8c679-07de-4215-bd25-4e07ac3e4e4f",
          "description": "${role_query-groups}",
          "id": "1d3e61b4-e290-4666-bc17-de19c8714b40",
          "name": "query-groups"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0ce8c679-07de-4215-bd25-4e07ac3e4e4f",
          "description": "${role_query-realms}",
          "id": "2c723c8d-6cba-41d8-b88d-758eef5f0658",
          "name": "query-realms"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0ce8c679-07de-4215-bd25-4e07ac3e4e4f",
          "description": "${role_query-users}",
          "id": "572def42-c018-465b-8d13-5a677db203eb",
          "name": "query-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0ce8c679-07de-4215-bd25-4e07ac3e4e4f",
          "description": "${role_view-authorization}",
          "id": "cc356e59-d1fe-4512-8e68-d144b4484562",
          "name": "view-authorization"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0ce8c679-07de-4215-bd25-4e07ac3e4e4f",
          "description": "${role_view-events}",
          "id": "cf352e9d-c6d6-4771-88d8-e9e15523e812",
          "name": "view-events"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0ce8c679-07de-4215-bd25-4e07ac3e4e4f",
          "description": "${role_view-identity-providers}",
          "id": "90a7d606-0785-483c-80a3-c1ff5a125362",
          "name": "view-identity-providers"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "0ce8c679-07de-4215-bd25-4e07ac3e4e4f",
          "description": "${role_view-realm}",
          "id": "b1b3127c-5d44-4a1d-b795-deb9e5240409",
          "name": "view-realm"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "create-client",
                "impersonation",
                "manage-authorization",
                "manage-clients",
                "manage-events",
                "manage-identity-providers",
                "manage-realm",
                "manage-users",
                "query-clients",
                "query-groups",
                "query-realms",
                "query-users",
                "view-authorization",
                "view-clients",
                "view-events",
                "view-identity-providers",
                "view-realm",
                "view-users"
              ]
            }
          },
          "containerId": "0ce8c679-07de-4215-bd25-4e07ac3e4e4f",
          "description": "${role_realm-admin}",
          "id": "37c00eee-e936-4428-a043-0c77d414db90",
          "name": "realm-admin"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "containerId": "0ce8c679-07de-4215-bd25-4e07ac3e4e4f",
          "description": "${role_view-clients}",
          "id": "bdfebcbf-5197-40cb-8f51-d103b662a966",
          "name": "view-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "containerId": "0ce8c679-07de-4215-bd25-4e07ac3e4e4f",
          "description": "${role_view-users}",
          "id": "b18cef88-3ba1-4d08-98c2-bfe55873ff4d",
          "name": "view-users"
        }
      ],
      "records-of-processing-activities": [],
      "records-of-processing-activities-gui": [],
      "security-admin-console": []
    },
    "realm": [
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "fdk",
        "description": "${role_offline-access}",
        "id": "f257f47b-f7cc-4029-8c7f-7b9c6c0c0f15",
        "name": "offline_access"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "fdk",
        "description": "${role_uma_authorization}",
        "id": "ea398e1f-5f00-4773-bb55-f26822585766",
        "name": "uma_authorization"
      }
    ]
  },
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "smtpServer": {},
  "sslRequired": "external",
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionMaxLifespanRememberMe": 0,
  "supportedLocales": [],
  "userManagedAccessAllowed": false,
  "verifyEmail": false,
  "waitIncrementSeconds": 60
}
